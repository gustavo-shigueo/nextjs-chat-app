@use 'styles/abstracts';
$colors: 'neutral', 'primary', 'accent', 'success', 'warning', 'danger';

@layer components {
	.button {
		--border-width: 1px;

		display: grid;
		place-items: center;
		gap: var(--size-400);

		position: relative;
		padding: 0.3em 0.5em;
		border: var(--border-width) solid var(--bg-color);

		border-radius: var(--size-100);
		isolation: isolate;

		color: var(--text-color);
		background-color: var(--bg-color);
		font-weight: bold;
		box-shadow: var(--box-shadow-small);
		will-change: contents;

		scale: var(--scale, 1);

		cursor: pointer;
		outline-offset: 0;
		transition: 100ms outline-offset ease-in-out, scale 150ms ease-in-out,
			box-shadow 150ms ease-in-out, filter 150ms ease-in-out;

		&::before,
		&::after {
			content: '';
			position: absolute;
			inset: calc(-1 * var(--border-width));

			z-index: -1;
			pointer-events: none;

			opacity: 0;
			border-radius: inherit;
			transition: opacity 150ms ease-in-out;
		}

		&:has(> :nth-child(3)) {
			grid-template-columns: repeat(3, auto);
		}

		&:has(> :nth-child(2):last-child) {
			grid-template-columns: repeat(2, auto);
		}

		&:has(> :nth-child(2)) > :last-child {
			margin-inline-start: auto;
		}

		&::before {
			box-shadow: inset var(--box-shadow-small);
		}

		&::after {
			opacity: 0;
			background-color: abstracts.$colorLight;
		}

		&:not(:disabled):is(:hover, :focus-visible)::after {
			opacity: 0.25;
		}

		&:not([data-type]) {
			--bg-color: hsl(var(--color-neutral-600));
			--text-color: hsl(var(--color-neutral-100));
		}

		&:disabled {
			box-shadow: none;
			filter: grayscale(0.5);
			cursor: not-allowed;
		}

		&[data-outline='true'] {
			background-color: transparent;
			--text-color: var(--bg-color);
		}

		&:not([data-outline='true']) {
			--text-color: #{abstracts.$colorLight};
		}

		&:focus {
			outline: none;
		}

		&:focus-visible {
			outline: 2px solid var(--bg-color);
			outline-offset: 2px;
		}

		&:active {
			--scale: 0.975;
			box-shadow: none;

			&::before {
				opacity: 1;
			}
		}

		@each $color in $colors {
			&:where([data-type='#{$color}']) {
				--bg-color: hsl(var(--color-#{$color}-500));
			}
		}

		&:where([data-type='flat']) {
			--bg-color: hsl(var(--color-neutral-500) / 0);
			box-shadow: none;
		}
	}
}
